@page "/UspertVehicle/{Id:guid}"
@page "/UspertVehicle/{Id:guid}/{VehicleId:guid?}"
@using VehicleRegisterApp.Data.Models
@using VehicleRegisterApp.Services
@using VehicleRegisterApp.Services.VehicleServices
@inject IVehicleService VehicleService
@inject NavigationManager Nav


<div class="row g-2">
    <div class="col-md-2">
        <label class="form-label">Type</label>
        <input class="form-control" @bind="model.Type" />
    </div>
    <div class="col-md-5">
        <label class="form-label">Registration Number</label>
        <input class="form-control" @bind="model.RegNumber" />
    </div>
    <div class="col-md-5">
        <label class="form-label">Model</label>
        <input class="form-control" @bind="model.Model" />
    </div>
    <div class="col-md-5">
        <label class="form-label">Weight in tonnage</label>
        <input class="form-control" @bind="model.Weight" />
    </div>
</div>
<div class="mt-3">
    <button class="btn btn-primary me-2" @onclick="SaveVehicle">Save Vehicle</button>
    <NavLink class="btn btn-secondary" href="/">Cancel</NavLink>
</div>
@code {
    private Vehicle model = new();
    [Parameter]
    public Guid? Id { get; set; }
    [Parameter]
    public Guid? VehicleId { get; set; }

    private string Title => VehicleId.HasValue ? "Edit Contractor" : "Add Contractor";

    protected override async Task OnInitializedAsync()
    {
        if (VehicleId.HasValue)
        {
            var vehicle = await VehicleService.GetByIdAsync(VehicleId.Value);

            if (vehicle != null)
            {
                model = vehicle;
            }
            else
            {
                Nav.NavigateTo("/");
            }
        }
        else if (Id.HasValue)
        {
            model.ContractorId = Id.Value;
        }
        else
        {
            Nav.NavigateTo("/");
        }
    }

    private async Task SaveVehicle()
    {
        if (VehicleId.HasValue)
        {
            await VehicleService.UpdateAsync(VehicleId.Value, model);
        }
        else
        {
            await VehicleService.CreateAsync(model);
        }
        Nav.NavigateTo("/");
    }
}